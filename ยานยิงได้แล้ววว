#include<stdio.h>
#include<Windows.h>
#include<conio.h>
#include<iostream>

void setcursor(bool visible)
{
    HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_CURSOR_INFO lpCursor;
    lpCursor.bVisible = visible;
    lpCursor.dwSize = 20;
    SetConsoleCursorInfo(console, &lpCursor);
}

void setcolor(int fg, int bg)
{
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(hConsole, bg * 16 + fg);
}

void gotoxy(int x, int y) {
    COORD c = { x, y };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);
}

void draw_bullet(int x, int y)
{
    setcolor(2, 4);
    gotoxy(x, y);
    printf("^");
}

void erase_bullet(int x, int y)
{
    setcolor(0, 0);
    gotoxy(x, y);
    printf(" ");
}

void draw_ship(int x, int y)
{
    setcolor(2, 4);
    gotoxy(x, y);
    printf(" <-0-> ");
}

void erase_ship(int x, int y)
{
    setcolor(0, 0);
    gotoxy(x, y);
    printf("       ");
}

int main()
{
    char ch = '.';
    setcursor(0);
    int x = 38, y = 20;
    int direction; // 1 = left 2 = right 3 = stop
    direction = 3;
    int Xbullet[5], Ybullet[5], bulletstatus[5], bulletcount = 0; // 0 1 2 3 4
    for (int i = 0; i < 5; i++)
    {
        bulletstatus[i] = 0;
    }
    draw_ship(x, y);
    do {
        if (_kbhit())
        {
            ch = _getch();
            if (ch == 'a')
                direction = 1;      
            if (ch == 'd')
                direction = 2;
            if (ch == 's')
                direction = 3;
            if (ch == ' ' && bulletcount >=0 && bulletcount <= 5)
            {
                bulletstatus[bulletcount] = 1;
                Xbullet[bulletcount] = x + 3;
                Ybullet[bulletcount] = y-1;
                bulletcount += 1;
            }
            if (bulletcount > 5 && bulletstatus[0] == 0)
            {
                bulletcount = 0;
            }
            fflush(stdin);
        }
        if (direction == 1 && x!=0)
        {
            erase_ship(x, y);
            draw_ship(--x, y);
        }
        if (direction == 2 && x < 80)
        {
            erase_ship(x, y);
            draw_ship(++x, y);
        }
        for (int i = 0; i < 5; i++)
        {
            if (bulletstatus[i] == 1)
            {
                erase_bullet(Xbullet[i], Ybullet[i]);
                if (Ybullet[i] > 0)
                    draw_bullet(Xbullet[i], --Ybullet[i]);
                else
                    bulletstatus[i] = 0;
            }
        }
        Sleep(100);
    } while (ch != 'x');
    return 0;
}
